{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "OBS Plugin Configuration",
  "description": "Configuration file for OBS Studio plugin development with AI assistance",
  "type": "object",
  "required": ["sdk_path", "build_system", "plugin_entry"],
  "properties": {
    "sdk_path": {
      "type": "string",
      "description": "Path to OBS Studio SDK (should use .deps directory generated by buildspec.json)",
      "default": ".deps/obs-studio",
      "examples": [".deps/obs-studio", ".deps/obs"]
    },
    "platform_build_dirs": {
      "type": "object",
      "description": "Platform-specific build directories",
      "properties": {
        "macos": {
          "type": "string",
          "default": "build_macos",
          "description": "Build directory for macOS"
        },
        "windows": {
          "type": "string", 
          "default": "build_x64",
          "description": "Build directory for Windows"
        },
        "linux": {
          "type": "string",
          "default": "build_linux", 
          "description": "Build directory for Linux"
        }
      },
      "additionalProperties": {
        "type": "string"
      }
    },
    "build_system": {
      "type": "string",
      "enum": ["cmake", "meson", "make"],
      "default": "cmake",
      "description": "Build system to use for compilation"
    },
    "plugin_entry": {
      "type": "string",
      "description": "Main plugin source file",
      "default": "src/plugin.cpp",
      "pattern": "\\.(cpp|c)$"
    },
    "platform_profiles": {
      "type": "object",
      "description": "Platform-specific build configurations",
      "properties": {
        "macos": {
          "$ref": "#/definitions/platform_profile"
        },
        "windows": {
          "$ref": "#/definitions/platform_profile"
        },
        "linux": {
          "$ref": "#/definitions/platform_profile"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/platform_profile"
      }
    },
    "dependencies": {
      "type": "object",
      "description": "Project dependencies and their paths (all should use .deps directory structure)",
      "additionalProperties": {
        "type": "string"
      },
      "properties": {
        "obs": {
          "type": "string",
          "description": "Path to OBS Studio dependency (default: .deps/obs-studio)",
          "default": ".deps/obs-studio",
          "examples": [".deps/obs-studio", ".deps/obs"]
        },
        "qt6": {
          "type": "string",
          "description": "Path to Qt6 dependency (default: .deps/qt6)",
          "default": ".deps/qt6",
          "examples": [".deps/qt6", ".deps/Qt6"]
        },
        "frontend_api": {
          "type": "string",
          "description": "Path to OBS Frontend API dependency (default: .deps/obs-studio/UI/obs-frontend-api)",
          "default": ".deps/obs-studio/UI/obs-frontend-api",
          "examples": [".deps/obs-studio/UI/obs-frontend-api", ".deps/obs/UI/obs-frontend-api"]
        }
      }
    },
    "coding_conventions": {
      "$ref": "#/definitions/coding_conventions"
    },
    "ai_prompts": {
      "$ref": "#/definitions/ai_prompt_config"
    }
  },
  "definitions": {
    "platform_profile": {
      "type": "object",
      "required": ["cmake_preset", "build_command"],
      "properties": {
        "build_dir": {
          "type": "string",
          "description": "Platform-specific build directory",
          "examples": ["build_macos", "build_x64", "build_linux"]
        },
        "cmake_preset": {
          "type": "string",
          "description": "CMake preset name for this platform",
          "examples": ["macos", "windows-x64", "linux"]
        },
        "build_command": {
          "type": "string",
          "description": "Build command using CMake preset",
          "examples": [
            "cmake --build --preset macos --config Debug",
            "cmake --build --preset windows-x64 --config Release"
          ]
        },
        "configure_command": {
          "type": "string",
          "description": "Configure command using CMake preset",
          "examples": [
            "cmake --preset macos",
            "cmake --preset windows-x64"
          ]
        },
        "output_dir": {
          "type": "string",
          "description": "Platform-specific output directory",
          "examples": ["build_macos", "build_windows", "build_linux"]
        },
        "compiler": {
          "type": "string",
          "description": "Compiler toolchain for this platform",
          "enum": ["clang++", "g++", "msvc"],
          "examples": ["clang++", "g++", "msvc"]
        }
      }
    },
    "coding_conventions": {
      "type": "object",
      "description": "Coding standards and conventions for the project",
      "properties": {
        "header_extension": {
          "type": "string",
          "default": ".hpp",
          "enum": [".hpp", ".h"],
          "description": "File extension for C++ headers"
        },
        "use_pragma_once": {
          "type": "boolean",
          "default": true,
          "description": "Use #pragma once instead of include guards"
        },
        "ui_components_dir": {
          "type": "string",
          "default": "ui",
          "description": "Directory for UI component files"
        },
        "qt6_moc_include": {
          "type": "boolean",
          "default": true,
          "description": "Include moc_ClassName.cpp for Qt6 signal support"
        },
        "english_comments": {
          "type": "boolean",
          "default": true,
          "description": "Use English for all code comments"
        },
        "auto_commit": {
          "type": "boolean",
          "default": true,
          "description": "Automatically commit after successful builds"
        }
      }
    },
    "ai_prompt_config": {
      "type": "object",
      "description": "AI assistance configuration",
      "properties": {
        "system_template": {
          "type": "string",
          "default": "obs_plugin_expert",
          "enum": ["obs_plugin_expert", "obs_error_fix", "custom"],
          "description": "System prompt template to use"
        },
        "include_conventions": {
          "type": "boolean",
          "default": true,
          "description": "Include coding conventions in AI context"
        },
        "include_project_structure": {
          "type": "boolean",
          "default": true,
          "description": "Include project structure in AI context"
        },
        "include_recent_errors": {
          "type": "boolean",
          "default": true,
          "description": "Include recent build errors in AI context"
        },
        "custom_system_prompt": {
          "type": "string",
          "description": "Custom system prompt (when system_template is 'custom')"
        }
      }
    }
  }
}